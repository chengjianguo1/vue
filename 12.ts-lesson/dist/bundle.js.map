{"version":3,"file":"bundle.js","sources":["../src/index.ts"],"sourcesContent":["// 扩展属性 \n\ndeclare global { // 将一下内容合并到global上去\n    interface String {\n        double():string\n    }\n    interface Window {\n        xxx:string\n    }\n}\n\n\nString.prototype.double = function () {\n    return this as string + this; // 隐式类型转化 一方是字符串 另一方也会转化成字符串\n}\nwindow.xxx\n\n\n// 1) 接口默认会合并 可以给已有的属性合并属性或者方法\n// 2) 类和命名空间可以合并 \n// 3) 函数和命名空间可以合并\n// 4) 枚举和命名空间可以合并 \n// >  表达式都没法合并 ----\n// 5) 交叉类型合并数据\n\n\n// d.ts   默认打包出来的代码 可以指定生成.d.ts 文件\n\n// 1.默认先查找node_modules  package.json types字段 有说明直接就找到了\n// 2.找对应包下有没有 index.d.ts 如果没有说明此包没有用ts来写\n// 3.找@types下的文件来查找\n\n\nexport {}"],"names":[],"mappings":";;;IAAA;IAYA,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG;QACtB,OAAO,IAAc,GAAG,IAAI,CAAC;IACjC,CAAC;;;;;;"}